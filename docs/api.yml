openapi: 3.0.1

servers:
  - url: http://localhost:8081/

info:
  description: Service for TODO
  version: 1.0.0
  title: dku-example-project
  contact:
    email: info@dans.knaw.nl
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

paths:
  /todo:
    get:
      summary: List all TODO's
      operationId: getAllTodos
      responses:
        200:
          description: List of TODO's
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
    post:
      summary: Create a TODO
      operationId: createTodo
      requestBody:
        description: The TODO to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        201:
          description: List of TODO's
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoError'

  /todo/{id}:
    get:
      summary: Get a TODO by ID
      operationId: getTodoById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: A single TODO
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        404:
          description: TODO not found

    put:
      summary: Update a TODO
      operationId: updateTodo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: The TODO to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        200:
          description: A single TODO
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        404:
          description: TODO not found

    delete:
      summary: Delete a TODO
      operationId: deleteTodo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: The TODO ID that was just removed
          content:
            application/json:
              schema:
                type: integer
                format: int64
        404:
          description: TODO not found


components:
  schemas:
    Todo:
      type: object
      description: The TODO object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        title:
          type: string
        dueDate:
          type: string
          format: date-time
        attachment:
          type: string
          format: file
      required:
        - title

    TodoError:
      type: object
      description: TODO error description, with an error message per field
      properties:
        additionalProperties:
          type: string
